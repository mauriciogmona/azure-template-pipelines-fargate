parameters:
  - name: vmImage
    type: string
    default: "ubuntu-latest"
  - name: SkipFailed
    type: boolean
    default: false
  - name: awsRegion
    default: us-east-1
  - name: nodejsVersion
    default: 18.x
  - name: buscketName
    default: sls-deployment-bucket
  - name: tagName
    type: string
    default: $(Build.BuildNumber)-$(Build.SourceBranchName) 
  - name: stage
    type: string
    default: dev

jobs:
  - job: "Set_value"
    displayName: "Set variables and values" 
    variables:
      - name: valueGroupName
        value: ${{variables['Build.Repository.Name']}}-${{parameters.stage}}
      - name: AWS_REGION
        value: ${{ parameters.awsRegion }}
    pool:
      vmImage: ${{ parameters.vmImage }} 
    steps:
      - checkout: self     
      - script: |
          echo $BUILD_REQUESTEDFOREMAIL
          echo $BUILD_REQUESTEDFOR
          echo 'repository name: '$(Build.Repository.Name)
          echo 'group variables: '${{variables['valueGroupName']}}
          echo 'bucket name    : '${{parameters.buscketName}}-${{parameters.stage}}
          echo 'tag name       : '$(Build.BuildNumber)-$(Build.SourceBranchName) 
        displayName: "Ver para validar cluster y grupo de variables"   
  - job: "Build"
    dependsOn: Set_value
    variables:
      - name: valueGroupName
        value: ${{variables['Build.Repository.Name']}}-${{parameters.stage}}
      - group: ${{ variables.valueGroupName }}
      - name: AWS_REGION
        value: ${{ parameters.awsRegion }}
      - name: TAG
        value: ${{ parameters.tag }}
    pool:
      vmImage: ${{ parameters.vmImage }}
    continueOnError: ${{ parameters.SkipFailed }}
    steps:
      - checkout: self
      - task: replacetokens@5
        inputs:
          rootDirectory: '$(System.DefaultWorkingDirectory)'
          targetFiles: '**/sls-files/enviroments.env.yml'
          encoding: 'auto'
          tokenPattern: 'default'
          writeBOM: true
          actionOnMissing: 'warn'
          keepToken: false
          actionOnNoFiles: 'continue'
          enableTransforms: false
          enableRecursion: false
          useLegacyPattern: false
          enableTelemetry: true
        displayName: "Remplazo de variables"
      - task: PowerShell@2
        displayName: set variable buildTimeStamp
        inputs:
          targetType: 'inline'
          script: |
            $date=$(Get-Date -Format yyyy-MM-dd_HH.mm.ss);
            Write-Host "##vso[task.setvariable variable=BUILD_DATE]$date"
      - script: |
          git config --global user.email $BUILD_REQUESTEDFOREMAIL
          git config --global user.name "$BUILD_REQUESTEDFOR"
          git tag -a ${{ parameters.tagName }} -m 'Deployment: $(BUILD_DATE), Brach: $(Build.SourceBranchName)'
          git push https://$(System.AccessToken)@dev.azure.com/ORGANIZACION/PROYECTO/_git/$(Build.Repository.Name)  ${{ parameters.tagName }} 
        workingDirectory: $(Build.SourcesDirectory)  
        displayName: "Add tag"  
      - task: NodeTool@0
        inputs:
          versionSpec: ${{ parameters.nodejsVersion }}
        displayName: "Install Node.js"
      - script: npm install -g serverless
        displayName: "Install serverless"  
      - script: npm install -no-cache
        displayName: "Install npm dependencies"
 
  - job: "Deploy"
    variables:
      - name: valueGroupName
        value: ${{variables['Build.Repository.Name']}}-${{parameters.stage}}
      - group: ${{ variables.valueGroupName }}
      - name: AWS_REGION
        value: ${{ parameters.awsRegion }}
    pool:
      vmImage: ${{ parameters.vmImage }}
    dependsOn: Build
    continueOnError: ${{ parameters.SkipFailed }}
    steps:
      - checkout: self
      - task: AWSShellScript@1
        inputs:
          awsCredentials: 'aws-serveless'-${{parameters.stage}}
          regionName: "$(AWS_REGION)"
          scriptType: "inline"
          inlineScript: |
            serverless deploy --region ${{ parameters.awsRegion }} --stage ${{parameters.stage}}
        displayName: "Deploy serverless"
